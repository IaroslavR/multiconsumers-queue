[tool.poetry]
name = "multiconsumers-queue"
version = "0.1.2"
description = "Wrapper for queue based producer/consumers parallel tasks execution"
authors = ["IaroslavR <iarruss@ya.ru>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/IaroslavR/multiconsumers-queue"
keywords = ["threading", "queue", "wrapper"]

[tool.poetry.dependencies]
python = "<3.8,>=3.7"
click = { version = "^7.1.1", optional = true }  # For examples
arrow = "^0.15.5"
attrs = "^19.3.0"
loguru = "^0.4.1"

[tool.poetry.dev-dependencies]
mypy = "^0.770"
pytest = "^5.4.1"
coverage = {version = "^5.1", extras = ["toml"]}
black = "^19.10b0"
flake8 = "^3.7.9"
flake8-black = "^0.1.1"
flake8-import-order = "^0.18.1"
flake8-bugbear = "^20.1.4"
flake8-bandit = "^2.1.2"
safety = "^1.8.7"
flake8-annotations = "^2.1.0"
pytype = "^2020.4.22"
typeguard = "^2.7.1"
darglint = "^1.2.3"
flake8-docstrings = "^1.5.0"
pre-commit = "^2.3.0"

[tool.poetry.extras]
click = ["click"]

[tool.poetry.urls]
issues = "https://github.com/IaroslavR/multiconsumers-queue-cli/issues"

[tool.coverage.run]
branch = true
source = ["multiconsumers_queue"]

[tool.coverage.report]
show_missing = true

[tool.black]
line-length = 100
target-version = ['py37']

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
